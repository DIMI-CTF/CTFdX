# ctfdx 구성을 이용하기 위한 설정파일 탬플릿 #


######## 모두 해당되는 설정 ########

# [standard, container, dynamic]
# standard: 문제풀면 점수주는거
# container: 문제풀때 드림핵 문제처럼 도커 컨테이너가 사용자별로 생성되는거. prototype pollution 같은 문제에 쓰기 좋음. 웹 문제나 포너블 문제는 거의다 이걸로 해야할 듯
# dynamic: 풀면 점수 떨어지는 문제
CHALLENGE_TYPE=

# 카테고리 적으면 됨. 기본적으로 모두 대문자로 통일하자
CHALLENGE_CATEGORY=

# 문제 이름. 공란으로 남겨두면 폴더 이름이 기본적으로 지정됨.
CHALLENGE_NAME=

# 문제 본문. 마크다운 형식임. 만약 문제 폴더 바로 하위에 readme.md 파일이 있으면 거기 안에 있는 내용으로 대체됨.
CHALLENGE_MESSAGE=

# 문제 점수
CHALLENGE_SCORE=


######## container, dynamic 에 해당되는 설정 ########
# container는 자동으로 푸는 사람에 비례해서 점수가 줄어들음.

# 처음 문제에 점수
DECAY_INIT=

# 문제의 최소점수
DECAYED_MINIMUM=


######## dynamic 에 해당되는 설정 ########

# Linear, Logarithmic
# Linear: initial - (decay * solveCount)
# Logarithmic: (((minimum - initial) / (decay**2)) * (solveCount**2)) + initial
DECAY_FUNCTION=

# 감소 값
DECAY_VALUE=


######## container 에 해당되는 설정 ########

# 이미지 이름. 버전까지 붙어야함
# 예) noneofhan-byeol-app:lastest
DOCKER_IMAGE=

# 연결 방식
# Web, TCP, SSH
# TCP가 포너블. SSH는 특수한 상황
DOCKER_CONNECT_TYPE=

# 포트
DOCKER_PORT=

# 도커에서 실행할 커맨드. 공란 가능
DOCKER_COMMAND=
